(defwidget action-button [text hotkey]
  (box :class "action-button"
    (box :orientation "v"
      text
      (box :class "keyhint" "(${hotkey})")
    )
  )
)


(defwidget container [orientation] (
    box
    :orientation orientation
    :class "container"
    (children)
  ))

;; lightboxes
(defwindow lightbox-a
  :monitor 0
  :geometry (geometry :x "0px" :y "0px" :width "100%" :height "100%" :anchor "top left")
  :stacking "fg"
  (box :class "lightbox")
)
(defwindow lightbox-b
  :monitor 1
  :geometry (geometry :x "0px" :y "0px" :width "100%" :height "100%" :anchor "top left")
  :stacking "fg"
  (box :class "lightbox")
)

;; powerbars
(defwidget powerbar-widget []
  (container
    :orientation "v"
    (action-button :text "" :hotkey "q")
    (action-button :text "󰍃" :hotkey "l")
    (action-button :text "" :hotkey "r")
    (action-button :text "󰤆" :hotkey "s")
  )
)
(defwindow powerbar-a
  :monitor 0
  :geometry (geometry :x "30px" :anchor "center right")
  :stacking "fg"
  (powerbar-widget)
)
(defwindow powerbar-b
  :monitor 1
  :geometry (geometry :x "30px" :anchorx "center right")
  :stacking "fg"
  (powerbar-widget)
)

(defwidget volume-ctrl []
  (container
    :orientation "v"
    (audio-slider :name "chrome")
    (audio-slider :name "music")
  )
)

(defwidget audio-slider [name]
  (box
    :orientation "v"
    (label :class "label" :text name :xalign 0)
    (progress
      :class "audio-slider"
      :orientation "h"
      :value 20.0
      :flipped false
    ))
)

(defwindow volume-ctrl-a
  :monitor 0
  :geometry (geometry :width 400 :x "30px" :anchor "center left")
  :stacking "fg"
  (volume-ctrl)
)
