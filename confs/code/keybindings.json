[
  {
    "command": "-workbench.action.terminal.goToRecentDirectory",
    "key": "ctrl+g"
  },
  {
    "command": "-workbench.action.quit",
    "key": "ctrl+q"
  },
  {
    "command": "-workbench.action.files.newUntitledFile",
    "key": "ctrl+n"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "command": "-workbench.action.quickOpen",
    "key": "ctrl+p"
  },
  {
    "command": "-workbench.action.toggleSidebarVisibility",
    "key": "ctrl+b"
  },
  {
    "command": "workbench.action.closeSidebar",
    "key": "ctrl+shift+e",
    "when": "activeViewlet == 'workbench.view.explorer'"
  },
  {
    "command": "workbench.action.closeSidebar",
    "key": "ctrl+shift+g",
    "when": "activeViewlet == 'workbench.view.git'"
  },
  {
    "command": "workbench.action.closeSidebar",
    "key": "ctrl+shift+f",
    "when": "activeViewlet == 'workbench.view.search'"
  },
  {
    "command": "workbench.action.closeSidebar",
    "key": "ctrl+shift+a",
    "when": "activeViewlet == 'workbench.view.git'"
  },
  {
    "command": "workbench.action.closeSidebar",
    "key": "ctrl+shift+d",
    "when": "activeViewlet == 'workbench.view.debug'"
  },
  {
    "command": "workbench.action.closeSidebar",
    "key": "ctrl+shift+x",
    "when": "activeViewlet == 'workbench.view.extensions'"
  },
  {
    "command": "workbench.action.quickOpen",
    "key": "ctrl+'"
  },
  {
    "command": "-dance.selections.pipe.prepend",
    "key": "shift+alt+1",
    "when": "editorTextFocus && dance.mode == 'normal'"
  },
  {
    "command": "-workbench.action.moveEditorToFirstGroup",
    "key": "shift+alt+1"
  },
  {
    "command": "-workbench.action.moveEditorToLastGroup",
    "key": "shift+alt+9"
  },
  {
    "command": "-dance.selections.pipe",
    "key": "shift+alt+\\",
    "when": "editorTextFocus && dance.mode == 'normal'"
  },
  {
    "command": "-language-julia.executeCellAndMove",
    "key": "shift+alt+enter",
    "when": "editorTextFocus && activeEditor != 'workbench.editor.notebook' && editorLangId in 'julia.supportedLanguageIds'"
  },
  {
    "command": "workbench.action.closeGroup",
    "key": "ctrl+shift+w",
    "when": "multipleEditorGroups"
  },
  {
    "command": "-workbench.action.closeWindow",
    "key": "ctrl+shift+w"
  },
  {
    "command": "editor.action.formatDocument",
    "key": "=",
    "when": "dance.mode == 'normal'"
  },
  {
    "key": "ctrl+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "command": "workbench.action.closeSidebar",
    "key": "ctrl+shift+h"
  },
  {
    "key": "ctrl+shift+l",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.focusSecondEditorGroup",
        "workbench.action.closeSidebar"
      ]
    },
    "when": "!isInDiffLeftEditor"
  },
  {
    "command": "diffEditor.switchSide",
    "when": "isInDiffLeftEditor",
    "key": "ctrl+shift+l"
  },
  {
    "command": "diffEditor.switchSide",
    "when": "isInDiffRightEditor",
    "key": "ctrl+shift+h"
  },
  {
    "key": "ctrl+shift+h",
    "command": "runCommands",
    "when": "!isInDiffRightEditor",
    "args": {
      "commands": [
        "workbench.action.focusFirstEditorGroup",
        "workbench.action.closeSidebar"
      ]
    }
  },
  {
    "key": "ctrl+k ctrl+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+k ctrl+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "vscode-harpoon.editEditors"
  },
  {
    "key": "ctrl+enter",
    "command": "vscode-harpoon.editorQuickPick"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile",
    "when": "true"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFolderViaWorkspace",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFileFolder",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "/",
    "command": "-dance.search",
    "when": "editorTextFocus && dance.mode == 'normal'"
  },
  {
    "key": "/",
    "command": "workbench.action.experimental.quickTextSearch",
    "when": "editorTextFocus && dance.mode == 'normal'"
  },
  {
    "key": "ctrl+shift+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "n",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "dance.mode == 'normal' && isInDiffEditor"
  },
  {
    "key": "p",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "dance.mode == 'normal' && isInDiffEditor"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "ctrl+k o",
    "command": "-workbench.action.files.showOpenedFileInNewWindow",
    "when": "emptyWorkspaceSupport"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "h",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "l",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "o",
    "command": "explorer.openWith",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "r",
    "command": "revealFileInOS",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "f",
    "command": "copyFilePath",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "s",
    "command": "list.toggleSelection",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+f",
    "command": "copyRelativeFilePath",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+u",
    "command": "list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "escape",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "sideBarFocus && !inputFocus && !HasSelectionOrFocus"
  },
  {
    "key": "escape",
    "command": "list.clear",
    "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
  },
  {
    "key": "g g",
    "command": "list.focusFirst",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "g k",
    "command": "list.focusFirst",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "g j",
    "command": "list.focusLast",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "g h",
    "command": "list.focusLast",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "/",
    "command": "list.toggleKeyboardNavigation",
    "when": "listFocus && listSupportsKeyboardNavigation"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "d",
    "command": "moveFileToTrash",
    "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "c",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+o",
    "command": "explorer.openAndPassFocus",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "v",
    "command": "filesExplorer.openFilePreserveFocus",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": ",",
    "command": "dance.openMenu",
    "args": {
      "input": "file-explorer"
    },
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "m",
    "command": "dance.openMenu",
    "args": {
      "input": "file-explorer"
    },
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+i",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "'",
    "command": "dance.openMenu",
    "args": {
      "menu": {
        "items": {
          "l": {
            "text": "character left",
            "command": "dance.run",
            "args": {
              "commands": [
                ".select.left.extend",
                ".selections.changeDirection",
                ".select.right.extend",
                ".selections.changeDirection"
              ]
            }
          },
          "h": {
            "text": "character right",
            "command": "dance.run",
            "args": {
              "commands": [
                ".select.right.extend",
                ".selections.changeDirection",
                ".select.left.extend",
                ".selections.changeDirection"
              ]
            }
          },
          "j": {
            "text": "line down",
            "command": "dance.run",
            "args": {
              "commands": [
                ".select.down.extend",
                ".selections.changeDirection",
                ".select.up.extend",
                ".selections.changeDirection"
              ]
            }
          },
          "k": {
            "text": "line up",
            "command": "dance.run",
            "args": {
              "commands": [
                ".select.up.extend",
                ".selections.changeDirection",
                ".select.down.extend",
                ".selections.changeDirection"
              ]
            }
          },
          "(": {
            "text": "(surround)",
            "command": "dance.run",
            "args": {
              "input": "await replace((x) => '(' + x + ')')",
              "commands": [
                [
                  ".edit.insert",
                  {
                    "where": "start",
                    "shift": "extend",
                    "text": "("
                  }
                ],
                [
                  ".edit.insert",
                  {
                    "where": "end",
                    "shift": "extend",
                    "text": ")"
                  }
                ]
              ]
            }
          },
          "{": {
            "text": "{surround}",
            "command": "dance.run",
            "args": {
              "input": "await replace((x) => '{' + x + '}')",
              "commands": [
                [
                  ".edit.insert",
                  {
                    "where": "start",
                    "shift": "extend",
                    "text": "{"
                  }
                ],
                [
                  ".edit.insert",
                  {
                    "where": "end",
                    "shift": "extend",
                    "text": "}"
                  }
                ]
              ]
            }
          },
          "[": {
            "text": "[surround]",
            "command": "dance.run",
            "args": {
              "input": "await replace((x) => '[' + x + ']')",
              "commands": [
                [
                  ".edit.insert",
                  {
                    "where": "start",
                    "shift": "extend",
                    "text": "["
                  }
                ],
                [
                  ".edit.insert",
                  {
                    "where": "end",
                    "shift": "extend",
                    "text": "]"
                  }
                ]
              ]
            }
          },
          "<": {
            "text": "<surround>",
            "command": "dance.run",
            "args": {
              "input": "await replace((x) => '<' + x + '>')",
              "commands": [
                [
                  ".edit.insert",
                  {
                    "where": "start",
                    "shift": "extend",
                    "text": "<"
                  }
                ],
                [
                  ".edit.insert",
                  {
                    "where": "end",
                    "shift": "extend",
                    "text": ">"
                  }
                ]
              ]
            }
          },
          "\"": {
            "text": "\"surround\"",
            "command": "dance.run",
            "args": {
              "input": "await replace((x) => '\"' + x + '\"')",
              "commands": [
                [
                  ".edit.insert",
                  {
                    "where": "start",
                    "shift": "extend",
                    "text": "\""
                  }
                ],
                [
                  ".edit.insert",
                  {
                    "where": "end",
                    "shift": "extend",
                    "text": "\""
                  }
                ]
              ]
            }
          },
          "'": {
            "text": "'surround'",
            "command": "dance.run",
            "args": {
              "input": "await replace((x) => `'` + x + `'`)",
              "commands": [
                [
                  ".edit.insert",
                  {
                    "where": "start",
                    "shift": "extend",
                    "text": "'"
                  }
                ],
                [
                  ".edit.insert",
                  {
                    "where": "end",
                    "shift": "extend",
                    "text": "'"
                  }
                ]
              ]
            }
          },
          "`": {
            "text": "`surround`",
            "command": "dance.run",
            "args": {
              "input": "await replace((x) => '`' + x + '`')",
              "commands": [
                [
                  ".edit.insert",
                  {
                    "where": "start",
                    "shift": "extend",
                    "text": "`"
                  }
                ],
                [
                  ".edit.insert",
                  {
                    "where": "end",
                    "shift": "extend",
                    "text": "`"
                  }
                ]
              ]
            }
          },
          "s": {
            "text": "selection around",
            "command": "dance.selections.reduce",
            "args": {
              "where": "both"
            }
          },
          "d": {
            "text": "delete surround",
            "command": "dance.run",
            "args": {
              "input": "await replace((x) => x.slice(1 -1))",
              "commands": [
                ".selections.save",
                ".selections.reduce.edges",
                ".edit.delete",
                ".selections.restore"
              ]
            }
          }
        }
      },
      "locked": true
    },
    "when": "editorTextFocus && dance.mode == 'normal'"
  },
  {
    "key": "ctrl+shift+g g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g g",
    "command": "git-graph.view"
  },
  {
    "key": "ctrl+shift+g f",
    "command": "git-graph.openFile"
  }
]